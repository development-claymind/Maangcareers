"""
Django settings for maangcareerers project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from os import getenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = getenv('SECRET_KEY') or 'django-insecure-pxc@o)o(9g$b5$bwg++fa)31i&*ut3qxy_*%8)7j_9_3g(j^72'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # CHECK: deploy check

# SESSION_COOKIE_SECURE = True # CHECK: deploy check
# CSRF_COOKIE_SECURE = True # CHECK: deploy check
# SECURE_SSL_REDIRECT = True # CHECK: deploy check

# ADMINS = [
#     ("Akhil", "dev@maangcareers.com"),
# ]

# MANGERS = [
#     ("Akhil", "akhilgunti975@gmail.com"),
# ]

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_USE_TLS = True
# EMAIL_PORT = 587
# EMAIL_HOST_USER = 
# EMAIL_HOST_PASSWORD = 

# ALLOWED_HOSTS = [
#     'localhost',
#     '127.0.0.1',
#     'django.maangcareers.com',
#     'sales.maangcareers.com',
#     'salesmanager.maangcareers.com',
#     'adminmanager.maangcareers.com', # TODO: make other changes accordingly
#     'devdjango.maangcareers.com', # TODO: make other changes accordingly
#     # '.amazonaws.com' # NOTICE: for lambda testing
# ]
ALLOWED_HOSTS=["*"]

# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    'channels_redis',
    "corsheaders",
    "storages",
    'import_export',

    # 'drf_generators'
    'rest_framework',
    # 'dj_rest_auth',
    'knox',
    'django_filters',

    'userManagement',
    'courseManagement',
    'CRM',
    'websiteManagement',
    'testsManagement',
    'mentorManagement',
    'funneldate',
    'communication'
]

IMPORT_EXPORT_USE_TRANSACTIONS = True

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ('knox.auth.TokenAuthentication',),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 15
}

REST_KNOX = {
  'USER_SERIALIZER': 'maangcareerers.knox_auth.KonxLoginUserSerializer',
  'TOKEN_LIMIT_PER_USER': 2,
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'maangcareerers.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = 'maangcareerers.asgi.application'
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            # "hosts": ["redis://127.0.0.1:6379/1"],
            "hosts": ["redis://redis:6379"],
        },
    },
}

# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }



CORS_ALLOWED_ORIGINS = (
    'http://localhost:3000', # TODO: comment or remove after front end dev work
    'http://127.0.0.1:3000', # TODO: comment or remove after front end dev work
    'https://django.maangcareers.com',
    'https://dev.maangcareers.com',
    'https://qa.maangcareers.com',
    'https://www.maangcareers.com',
    'https://maangcareers.com',
    'http://devdjango.maangcareers.com',
    'https://devdjango.maangcareers.com',
)

CORS_ALLOW_CREDENTIALS = True


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': getenv('NAME') or 'MaangDB',
#         'USER': getenv('USER') or 'Maang',
#         'PASSWORD': getenv('PASSWORD') or 'MaangPassword',
#         'HOST': getenv('HOST') or 'localhost',
#         'PORT': getenv('PORT') or '5432',
#         'CONN_MAX_AGE': None
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": "mydatabase",
    }
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'MaangDB2',
#         'USER': 'postgres',
#         'PASSWORD': 'Riju@1234',
#         'HOST': 'localhost',
#         'PORT': '5432',
#         'CONN_MAX_AGE': None
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-gb'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = False

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# STORAGES = {
#     "default": {"BACKEND": "storages.backends.s3boto3.S3Boto3Storage"},
#     "staticfiles": {"BACKEND": "storages.backends.s3boto3.S3StaticStorage"}
# }

# AWS_ACCESS_KEY_ID = getenv('AWS_S3_ACCESS_KEY_ID')
# AWS_SECRET_ACCESS_KEY = getenv('AWS_S3_SECRET_ACCESS_KEY')
# AWS_STORAGE_BUCKET_NAME = "maangcareers-media"
# AWS_IS_GZIPPED = True
# AWS_S3_OBJECT_PARAMETERS = {
#     'StorageClass':'INTELLIGENT_TIERING',
# }
# AWS_S3_SIGNATURE_VERSION = 's3v4'
# AWS_S3_REGION_NAME = 'ap-south-1'
# # AWS_S3_VERIFY = False
# AWS_DEFAULT_ACL = None

STATIC_URL = 'static/'
# STATIC_ROOT = BASE_DIR / 'static'

MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'